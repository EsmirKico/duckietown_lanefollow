<?xml version="1.0" encoding="utf-8"?>
<launch>
	<arg name="veh" default="$(env VEHICLE_NAME)"/>
    <arg name="demo_name" value="lane_following_with_dynamic_avoidance"/>
	<!-- start basic args -->

	<include file="$(find duckietown_demos)/launch/master.launch">
	    <!-- Basic arguments -->
		<arg name="veh" value="$(arg veh)"/>
        <arg name="demo_name" value="$(arg demo_name)"/>
		<arg name="param_file_name" value="default" />
		<arg name="visualization" value="true" />

		<!-- Basic functionalities -->
		<arg name="line_detector_param_file_name" default="default" />
		<arg name="anti_instagram" default="true" />
		<arg name="/camera/raw" value="true"/>
		<arg name="/camera/rect" value="true"/>
		<arg name="LED" value="true"/>
        <arg name="/LED/emitter" value="true"/>
		<arg name="/LED/pattern_switch" value="true"/>

	    <!-- Lane Following stack -->
	    <arg name="lane_following" value="true"/>
	    <arg name="/lane_following/line_detection" value="true"/>
	    <arg name="/lane_following/ground_projection" value="true"/>
	    <arg name="/lane_following/lane_filter" value="true"/>
	    <arg name="/lane_following/lane_controller" value="true"/>
	    <arg name="/lane_following/stop_line_filter" value="true"/>
		<arg name="apriltags" value="true" />
		<arg name="object_detection" value="true"/>

  	</include>

    <!-- Dynamic Obstacle Avoidance -->
    <group ns="$(arg veh)">
        <!-- LED Detection Node -->
        <node pkg="dynamic_obstacle_avoidance" type="led_detection_node.py" name="led_detection_node" output="screen">
            <remap from="~image" to="camera_node/image/compressed"/>
            <rosparam file="$(find dynamic_obstacle_avoidance)/config/led_detection_node/default.yaml" command="load"/>
        </node>

        <!-- Duckie Detection Node -->
        <node pkg="dynamic_obstacle_avoidance" type="duckie_detection_node.py" name="duckie_detection_node" output="screen">
            <remap from="~image" to="camera_node/image/compressed"/>
            <remap from="~lane_pose" to="lane_filter_node/lane_pose"/>
            <rosparam file="$(find dynamic_obstacle_avoidance)/config/duckie_detection_node/default.yaml" command="load"/>
        </node>

        <!-- Dynamic Controller Node -->
        <node pkg="dynamic_obstacle_avoidance" type="dynamic_controller_node.py" name="dynamic_controller_node" output="screen">
            <remap from="~car_cmd_in" to="lane_controller_node/car_cmd"/>
            <remap from="~car_cmd" to="car_cmd_switch_node/cmd"/>
            <remap from="~fsm_mode" to="fsm_node/mode"/>
            <rosparam file="$(find dynamic_obstacle_avoidance)/config/dynamic_controller_node/default.yaml" command="load"/>
        </node>
    </group>
	
</launch> 